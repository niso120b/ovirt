---

- name: "CentOS | check PostgreSQL service"
  service:
    name: postgresql
    state: running
  register: postgresql_status
  ignore_errors: True

- name: "CentOS | install libselinux-python for ansible"
  yum:
    name: libselinux-python
    state: "present"
  when: postgresql_status|failed

- name: "CentOS | install policycoreutils-python for changing selinux port"
  yum:
    name: policycoreutils-python
    state: "present"
  when: postgresql_status|failed

- name: "CentOS | yum install PostgreSQL"
  yum:
    name: "postgresql-server"
    state: installed
    update_cache: yes
  when: postgresql_status|failed

- name: "CentOS | run PostgreSQL initdb"
  become_user: postgres
  become: yes
  shell: '/usr/bin/initdb -D /var/lib/pgsql/data'
  when: postgresql_status|failed

- name: "CentOS | start PostgreSQL service"
  service:
    name: postgresql
    state: started
    enabled: yes

- name: "CentOS | allow access engine database access from outside by update pg_hba.conf"
  lineinfile:
    dest: '/var/lib/pgsql/data/pg_hba.conf'
    insertafter: EOF
    line: "host {{ovirt_engine_db_name}} {{ovirt_engine_db_user}} 0.0.0.0/0 md5"
  when: ovirt_engine_remote_db == True

- name: "CentOS | allow access dwh database access from outside by update pg_hba.conf"
  lineinfile:
    dest: '/var/lib/pgsql/data/pg_hba.conf'
    insertafter: EOF
    line: "host {{ovirt_engine_dwh_db_name}} {{ovirt_engine_dwh_db_user}} 0.0.0.0/0 md5"
  when: ovirt_engine_dwh_remote_db == True

- name: "CentOS | update postgresql.conf"
  lineinfile:
    dest: '/var/lib/pgsql/data/postgresql.conf'
    insertafter: EOF
    line: "listen_addresses='{{ovirt_engine_remote_db_listen_address}}'"
  when: postgresql_status|failed

- name: "CentOS | update postgresql.conf port number in service file"
  lineinfile:
    dest: '/usr/lib/systemd/system/postgresql.service'
    backrefs: yes
    regexp: "Environment=PGPORT=5432"
    line: "Environment=PGPORT={{ovirt_engine_remote_db_port}}"
  register: port_update
  when: postgresql_status|failed and ovirt_engine_remote_db_port != 5432
  ignore_errors: True

- name: "CentOS | daemon reload - service file was changd"
  shell: 'systemctl daemon-reload'
  when: postgresql_status|failed and ovirt_engine_remote_db_port != 5432 and port_update|success

- name: "CentOS | allow selinux for non-standard port"
  shell: 'semanage port -a -t postgresql_port_t -p tcp {{ovirt_engine_remote_db_port}}'
  when: postgresql_status|failed and ovirt_engine_remote_db_port != 5432
  ignore_errors: True

- name: "CentOS | first check of PostgreSQL - if fail, setup"
  service:
    name: postgresql
    state: restarted

- name: "CentOS | check iptables service"
  service:
    name: iptables
    state: running
  register: iptables_status
  when: postgresql_status|failed
  ignore_errors: True

- name: "CentOS | open port for PostgreSQL in iptables"
  shell: "iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport {{ovirt_engine_remote_db_port}} -j ACCEPT"
  when: postgresql_status|failed and not iptables_status|failed

- name: "CentOS | save iptables rules"
  shell: "/sbin/iptables-save"
  when: postgresql_status|failed and not iptables_status|failed

- name: "CentOS | check firewalld service"
  service:
    name: firewalld
    state: running
  register: firewalld_status
  when: postgresql_status|failed
  ignore_errors: True

- name: "CentOS | open port for PostgreSQL in firewalld"
  firewalld:
    port: "{{ ovirt_engine_remote_db_port|int }}/tcp"
    permanent: True
    state: enabled
  when: postgresql_status|failed and not firewalld_status|failed

- name: "CentOS | reload firewalld"
  shell: "firewall-cmd --reload"
  when: postgresql_status|failed and not firewalld_status|failed

- name: "CentOS | creating directory for sql scripts in /tmp/ansible-sql"
  file:
    path: /tmp/ansible-sql
    state: directory

- name: "CentOS | copy SQL init scripts"
  template:
    src: "{{item}}.j2"
    dest: "/tmp/ansible-sql/{{item}}"
    mode: 0644
    owner: postgres
    group: postgres
  with_items:
    - "ovirt-engine-db-create.sql"
    - "ovirt-engine-db-user-create.sql"
    - "ovirt-engine-dwh-db-create.sql"
    - "ovirt-engine-dwh-db-user-create.sql"

- name: "CentOS | create engine DB and user"
  become_user: postgres
  become: yes
  command: psql -p "{{ ovirt_engine_remote_db_port }}" -a -f /tmp/ansible-sql/'{{item}}'
  with_items:
    - "ovirt-engine-db-user-create.sql"
    - "ovirt-engine-db-create.sql"
  when: ovirt_engine_remote_db == True

- name: "CentOS | create engine DWH DB and user"
  become_user: postgres
  become: yes
  command: psql -p "{{ ovirt_engine_remote_db_port }}" -a -f /tmp/ansible-sql/'{{item}}'
  with_items:
    - "ovirt-engine-dwh-db-user-create.sql"
    - "ovirt-engine-dwh-db-create.sql"
  when: ovirt_engine_dwh_remote_db == True

- name: "CentOS | check PostgreSQL service"
  service:
    name: postgresql
    state: started
    enabled: yes

- name: "CentOS | clean tmp files"
  file:
    path: '/tmp/ansible-sql'
    state: 'absent'
